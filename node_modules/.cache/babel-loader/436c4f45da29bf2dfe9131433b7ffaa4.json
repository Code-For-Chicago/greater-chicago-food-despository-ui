{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ethangabrielse/react-workspace/mapbox-test/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nimport illinois_counties from './illinois_counties.json';\nimport { baseLayer, selected } from './CountyLayer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      filter: ['in', 'COUNTY', ''],\n      viewport: {\n        latitude: 40.150196,\n        longitude: -89.367848,\n        zoom: 6,\n        width: \"50vw\",\n        height: \"100vh\"\n      },\n      x: null,\n      y: null,\n      hoveredFeature: null\n    };\n\n    this.onHover = event => {\n      const {\n        features,\n        srcEvent: {\n          offsetX,\n          offsetY\n        }\n      } = event;\n      const hoveredFeature = features && features.find(f => f.layer.id === 'county');\n      console.log(hoveredFeature);\n      this.setState({\n        hoveredFeature: hoveredFeature,\n        x: offsetX,\n        y: offsetY\n      });\n    };\n  }\n\n  componentDidMount() {\n    // API Call to get data\n    this.setState({\n      data: this.addSelected(illinois_counties)\n    });\n  }\n\n  addSelected(featureCollection) {\n    const {\n      features\n    } = featureCollection;\n    return {\n      type: 'FeatureCollection',\n      features: features.map(f => {\n        const properties = { ...f.properties,\n          selected: false\n        };\n        return { ...f,\n          properties\n        };\n      })\n    };\n  }\n\n  renderTooltip() {\n    const {\n      hoveredFeature,\n      x,\n      y\n    } = this.state;\n    return hoveredFeature && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        left: x,\n        top: y\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"County: \", hoveredFeature.properties.NAME]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"FIPS: \", hoveredFeature.properties.COUNTY]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...this.state.viewport,\n        mapboxApiAccessToken: \"pk.eyJ1IjoiZWdhYnJpZWxzZSIsImEiOiJja2d2ZDZua2QwMWI3M2JwajA0Z3lqbDdmIn0.sAaMKjFMEglTFxZwKyU75Q\",\n        onViewportChange: newViewport => this.setState({\n          viewport: newViewport\n        }),\n        onHover: this.onHover,\n        children: [/*#__PURE__*/_jsxDEV(Source, {\n          id: \"counties\",\n          type: \"geojson\",\n          data: this.state.data,\n          children: /*#__PURE__*/_jsxDEV(Layer, { ...baseLayer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), this.renderTooltip()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ethangabrielse/react-workspace/mapbox-test/src/App.js"],"names":["React","Component","ReactMapGL","Source","Layer","illinois_counties","baseLayer","selected","App","state","data","filter","viewport","latitude","longitude","zoom","width","height","x","y","hoveredFeature","onHover","event","features","srcEvent","offsetX","offsetY","find","f","layer","id","console","log","setState","componentDidMount","addSelected","featureCollection","type","map","properties","renderTooltip","left","top","NAME","COUNTY","render","newViewport"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {Component} from 'react';\nimport ReactMapGL, {Source, Layer} from 'react-map-gl';\nimport illinois_counties from './illinois_counties.json';\nimport {baseLayer, selected} from './CountyLayer';\n\nclass App extends Component {\n  state = {\n    data: null,\n    filter: ['in', 'COUNTY', ''],\n    viewport: {\n      latitude: 40.150196,\n      longitude: -89.367848, \n      zoom: 6,\n      width: \"50vw\",\n      height: \"100vh\"\n    },\n    x: null,\n    y: null,\n    hoveredFeature: null\n  }\n\n  componentDidMount() {\n    // API Call to get data\n    this.setState({data: this.addSelected(illinois_counties)})\n  }\n\n  addSelected(featureCollection) {\n    const {features} = featureCollection;\n    return {\n      type: 'FeatureCollection',\n      features: features.map(f => {\n        const properties = {\n          ...f.properties,\n          selected: false\n        };\n        return {...f, properties};\n      })\n    };\n  }\n\n\n  onHover = event => {\n    const {\n      features,\n      srcEvent: {offsetX, offsetY}\n    } = event;\n    const hoveredFeature = features && features.find(f => f.layer.id === 'county');\n    console.log(hoveredFeature);\n    this.setState({hoveredFeature: hoveredFeature, x: offsetX, y: offsetY});\n  };\n\n  renderTooltip() {\n    const {hoveredFeature, x, y} = this.state;\n\n    return (\n      hoveredFeature && (\n        <div className=\"tooltip\" style={{left: x, top: y}}>\n          <div>County: {hoveredFeature.properties.NAME}</div>\n          <div>FIPS: {hoveredFeature.properties.COUNTY}</div>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactMapGL\n          {...this.state.viewport}\n          mapboxApiAccessToken={\"pk.eyJ1IjoiZWdhYnJpZWxzZSIsImEiOiJja2d2ZDZua2QwMWI3M2JwajA0Z3lqbDdmIn0.sAaMKjFMEglTFxZwKyU75Q\"}\n          onViewportChange={(newViewport) => this.setState({viewport: newViewport})}\n          onHover={this.onHover}\n        >\n          <Source id=\"counties\" type=\"geojson\" data={this.state.data}>\n            <Layer {...baseLayer}></Layer>\n          </Source>\n          {this.renderTooltip()}\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}