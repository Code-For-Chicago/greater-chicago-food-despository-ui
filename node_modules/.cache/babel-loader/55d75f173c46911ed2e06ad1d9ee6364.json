{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ethangabrielse/react-workspace/mapbox-test/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport ReactMapGL, { Source, Layer } from 'react-map-gl';\nimport illinois_counties from './illinois_counties.json';\nimport illinois_zipcodes from './illinois_zipcodes.json';\nimport { baseLayer, selected, zipcode } from './CountyLayer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      filter: ['in', 'COUNTY', ''],\n      viewport: {\n        latitude: 40.150196,\n        longitude: -89.367848,\n        zoom: 6,\n        width: \"50vw\",\n        height: \"100vh\"\n      },\n      x: null,\n      y: null,\n      hoveredFeature: null\n    };\n\n    this.onHover = event => {\n      const {\n        features,\n        srcEvent: {\n          offsetX,\n          offsetY\n        }\n      } = event;\n      const hoveredFeature = features && features.find(f => f.layer.id === 'county');\n      var countyId = '';\n\n      if (hoveredFeature) {\n        countyId = hoveredFeature.properties.COUNTY;\n      }\n\n      this.setState({\n        hoveredFeature: hoveredFeature,\n        x: offsetX,\n        y: offsetY,\n        filter: ['in', 'COUNTY', countyId]\n      });\n      console.log(this.state);\n    };\n  }\n\n  componentDidMount() {\n    // API Call to get data\n    this.setState({\n      data: this.loadCensusAreaRange(illinois_counties)\n    });\n  }\n\n  loadCensusAreaRange(featureCollection) {\n    const {\n      features\n    } = featureCollection;\n    return {\n      type: 'FeatureCollection',\n      features: features.map(f => {\n        var rangeValue;\n\n        if (f.properties.CENSUSAREA <= 200.0) {\n          rangeValue = 0;\n        } else if (f.properties.CENSUSAREA <= 300.0) {\n          rangeValue = 1;\n        } else if (f.properties.CENSUSAREA <= 400.0) {\n          rangeValue = 2;\n        } else if (f.properties.CENSUSAREA <= 500.0) {\n          rangeValue = 3;\n        } else if (f.properties.CENSUSAREA <= 600.0) {\n          rangeValue = 4;\n        } else if (f.properties.CENSUSAREA <= 700.0) {\n          rangeValue = 5;\n        } else if (f.properties.CENSUSAREA <= 800.0) {\n          rangeValue = 6;\n        } else if (f.properties.CENSUSAREA <= 900.0) {\n          rangeValue = 7;\n        } else if (f.properties.CENSUSAREA > 900.0) {\n          rangeValue = 8;\n        }\n\n        const properties = { ...f.properties,\n          rangeValue: rangeValue\n        };\n        return { ...f,\n          properties\n        };\n      })\n    };\n  }\n\n  renderTooltip() {\n    const {\n      hoveredFeature,\n      x,\n      y\n    } = this.state;\n    return hoveredFeature && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        left: x,\n        top: y\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"County: \", hoveredFeature.properties.NAME]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"FIPS: \", hoveredFeature.properties.COUNTY]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Area square miles: \", hoveredFeature.properties.CENSUSAREA]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...this.state.viewport,\n        mapboxApiAccessToken: \"pk.eyJ1IjoiZWdhYnJpZWxzZSIsImEiOiJja2d2ZDZua2QwMWI3M2JwajA0Z3lqbDdmIn0.sAaMKjFMEglTFxZwKyU75Q\",\n        onViewportChange: newViewport => this.setState({\n          viewport: newViewport\n        }) //onHover={this.onHover}\n        ,\n        children: /*#__PURE__*/_jsxDEV(Source, {\n          id: \"zipcodes\",\n          type: \"geojson\",\n          data: illinois_zipcodes,\n          children: /*#__PURE__*/_jsxDEV(Layer, { ...zipcode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n/*\n<Source id=\"counties\" type=\"geojson\" data={this.state.data}>\n            <Layer {...baseLayer}></Layer>\n            <Layer {...selected} filter={this.state.filter}></Layer>\n          </Source>\n          {this.renderTooltip()}\n          */","map":{"version":3,"sources":["/Users/ethangabrielse/react-workspace/mapbox-test/src/App.js"],"names":["React","Component","ReactMapGL","Source","Layer","illinois_counties","illinois_zipcodes","baseLayer","selected","zipcode","App","state","data","filter","viewport","latitude","longitude","zoom","width","height","x","y","hoveredFeature","onHover","event","features","srcEvent","offsetX","offsetY","find","f","layer","id","countyId","properties","COUNTY","setState","console","log","componentDidMount","loadCensusAreaRange","featureCollection","type","map","rangeValue","CENSUSAREA","renderTooltip","left","top","NAME","render","newViewport"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {Component} from 'react';\nimport ReactMapGL, {Source, Layer} from 'react-map-gl';\nimport illinois_counties from './illinois_counties.json';\nimport illinois_zipcodes from './illinois_zipcodes.json'\nimport {baseLayer, selected, zipcode} from './CountyLayer';\n\nclass App extends Component {\n  state = {\n    data: null,\n    filter: ['in', 'COUNTY', ''],\n    viewport: {\n      latitude: 40.150196,\n      longitude: -89.367848, \n      zoom: 6,\n      width: \"50vw\",\n      height: \"100vh\"\n    },\n    x: null,\n    y: null,\n    hoveredFeature: null\n  }\n\n  componentDidMount() {\n    // API Call to get data\n    this.setState({data: this.loadCensusAreaRange(illinois_counties)})\n  }\n\n  loadCensusAreaRange(featureCollection) {\n    const {features} = featureCollection;\n    return {\n      type: 'FeatureCollection',\n      features: features.map(f => {\n        var rangeValue;\n        if (f.properties.CENSUSAREA <= 200.0) {\n          rangeValue = 0;\n        } else if (f.properties.CENSUSAREA <= 300.0) {\n          rangeValue = 1;\n        } else if (f.properties.CENSUSAREA <= 400.0) {\n          rangeValue = 2;\n        } else if (f.properties.CENSUSAREA <= 500.0) {\n          rangeValue = 3;\n        } else if (f.properties.CENSUSAREA <= 600.0) {\n          rangeValue = 4;\n        } else if (f.properties.CENSUSAREA <= 700.0) {\n          rangeValue = 5;\n        } else if (f.properties.CENSUSAREA <= 800.0) {\n          rangeValue = 6;\n        } else if (f.properties.CENSUSAREA <= 900.0) {\n          rangeValue = 7\n        } else if (f.properties.CENSUSAREA > 900.0) {\n          rangeValue = 8;\n        }\n        const properties = {\n          ...f.properties,\n          rangeValue: rangeValue\n        };\n        return {...f, properties};\n      })\n    };\n  }\n\n\n  onHover = event => {\n    const {\n      features,\n      srcEvent: {offsetX, offsetY}\n    } = event;\n    const hoveredFeature = features && features.find(f => f.layer.id === 'county');\n    var countyId = '';\n    if (hoveredFeature) {\n      countyId = hoveredFeature.properties.COUNTY;\n    }\n    this.setState({hoveredFeature: hoveredFeature, x: offsetX, y: offsetY, filter: ['in', 'COUNTY', countyId]});\n    console.log(this.state);\n  };\n\n  renderTooltip() {\n    const {hoveredFeature, x, y} = this.state;\n\n    return (\n      hoveredFeature && (\n        <div className=\"tooltip\" style={{left: x, top: y}}>\n          <div>County: {hoveredFeature.properties.NAME}</div>\n          <div>FIPS: {hoveredFeature.properties.COUNTY}</div>\n          <div>Area square miles: {hoveredFeature.properties.CENSUSAREA}</div>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactMapGL\n          {...this.state.viewport}\n          mapboxApiAccessToken={\"pk.eyJ1IjoiZWdhYnJpZWxzZSIsImEiOiJja2d2ZDZua2QwMWI3M2JwajA0Z3lqbDdmIn0.sAaMKjFMEglTFxZwKyU75Q\"}\n          onViewportChange={(newViewport) => this.setState({viewport: newViewport})}\n          //onHover={this.onHover}\n        >\n          <Source id=\"zipcodes\" type=\"geojson\" data={illinois_zipcodes}>\n            <Layer {...zipcode}></Layer>\n          </Source>\n          \n          \n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n<Source id=\"counties\" type=\"geojson\" data={this.state.data}>\n            <Layer {...baseLayer}></Layer>\n            <Layer {...selected} filter={this.state.filter}></Layer>\n          </Source>\n          {this.renderTooltip()}\n          */"]},"metadata":{},"sourceType":"module"}